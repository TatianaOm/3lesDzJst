import { fullTrim, nameIsValid } from '../src/homework/homework3';

/**
 * Допишите несколько unit тестов для функции (вспоминаем тест-дизайн),
 * которая удаляет пробелы и табуляторы в начале и конце строки.
 */

describe('Функция, удаляющая пробелы в начале и конце строки', () => {
 test('Проверяем тримминг для пробела в начале слова', () => {
  expect(fullTrim(' Это домашка')).toEqual('Это домашка');
});
test('Пробел удаляется в конце строки', () => {
  expect(fullTrim('Пробел в конце строки ')).toBe('Пробел в конце строки');
});

test('Несколько пробелов удаляется в конце строки', () => {
  expect(fullTrim('Несколько пробелов в конце строки      ')).toBe('Несколько пробелов в конце строки');
});

test('Несколько пробелов удаляется в начале строки', () => {
  expect(fullTrim('        Несколько пробелов в начале строки')).toBe('Несколько пробелов в начале строки');
});

test('Принимаемое значение не string = ERROR', () => {
  expect(() => fullTrim(5)).toThrow();
});

test('Принимаемое значение пустое', () => {
  expect(fullTrim('')).toBe('');
});

});

/**
 * Напишите параметризированный unit тест для функции, которая проверяет валидность кличек котиков.
 * Кличка счиатется валидной, если она соотвествует следующим условиям:
 * 1) Кличка содержит минимум два символа;
 * 2) Кличка не пустая;
 * 3) Кличка не содержит пробелов.

 Обратите внимание, в примере приведен обычный тест.
 Параметризированный тест - https://jestjs.io/docs/en/api#testeachtablename-fn-timeout
 */

describe('Функция принимает клички животных', () => {
 test('Передать валидную кличку', () => {
  expect(nameIsValid('Имя')).toEqual(true);
  });
test.each`
name | expected
${'МуркаМногосимвольная0101010101010101010101'} | ${true} 
${'Pi'} | ${true} 
${'Символ-дефис'} | ${true} 
${''} | ${false}
${'P'} | ${false} 
${' ПробелВНачале'} | ${false} 
${'ПробелВКонце '} | ${false} 
${'Пробел посредиСтроки'} | ${false} 
${'НесколькоЗначений-первое', 'НесколькоЗначений-второе'} | ${true} 
`('$name = $expected', ({name, expected}) => {
    expect(nameIsValid(name)).toBe(expected);
  });
});
